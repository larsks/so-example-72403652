- hosts: localhost
  gather_facts: false
  vars:
    domxml:
      results:
        - item:
            name: vm1
          stdout: |
            <domain type='kvm' id='1'>
              <name>vm1</name>
              <devices>
                <emulator>/usr/bin/qemu-system-x86_64</emulator>
                <disk type='block' device='disk'>
                  <driver name='qemu' type='raw' cache='none' io='native' discard='unmap'/>
                  <source dev='/dev/data/vm-vm1' index='1'/>
                  <backingStore/>
                  <target dev='vda' bus='virtio'/>
                  <alias name='virtio-disk0'/>
                  <address type='pci' domain='0x0000' bus='0x04' slot='0x00' function='0x0'/>
                </disk>
                <disk type='block' device='disk'>
                  <driver name='qemu' type='raw' cache='none' io='native' discard='unmap'/>
                  <source dev='/dev/data/vm-vm1-b' index='2'/>
                  <backingStore/>
                  <target dev='vdb' bus='virtio'/>
                  <alias name='virtio-disk0'/>
                  <address type='pci' domain='0x0000' bus='0x04' slot='0x00' function='0x0'/>
                </disk>
              </devices>
            </domain>
        - item:
            name: vm2
          stdout: |
            <domain type='kvm' id='2'>
              <name>vm2</name>
              <devices>
                <emulator>/usr/bin/qemu-system-x86_64</emulator>
                <disk type='block' device='disk'>
                  <driver name='qemu' type='raw' cache='none' io='native' discard='unmap'/>
                  <source dev='/dev/data/vm-vm2' index='2'/>
                  <backingStore/>
                  <target dev='vda' bus='virtio'/>
                  <alias name='virtio-disk0'/>
                  <address type='pci' domain='0x0000' bus='0x04' slot='0x00' function='0x0'/>
                </disk>
              </devices>
            </domain>

  tasks:
    - vars:
        vm_disks: []
      set_fact:
        vm_disks: >-
          {{
            vm_disks + [{
              'name': item.item.name,
              'disks': item.stdout|xpath('/domain/devices/disk')|map('xmltostring')|map('xmltodict')
            }]
          }}
      loop: "{{ domxml.results }}"
      loop_control:
        label: "{{ item.item.name }}"

    - copy:
        content: "{{ vm_disks | to_nice_json }}"
        dest: ./disks.json

    - debug:
        msg:
          - "vm: {{ item.0.name }}"
          - "source: {{ item.1.disk.source['@dev'] }}"
          - "target: {{ item.1.disk.target['@dev'] }}"
      loop: "{{ vm_disks|subelements('disks') }}"
      loop_control:
        label: "{{ item.0.name }}:{{ item.1.disk.target['@dev'] }}"


    - set_fact:
        vm_mounts: >-
          {{
            vm_mounts|combine({item.0.name: [{
              'source': item.1.disk.source['@dev'],
              'target': item.1.disk.target['@dev'],
            }]}, list_merge='append')
          }}
      vars:
        vm_mounts: {}
      loop: "{{ vm_disks|subelements('disks') }}"
      loop_control:
        label: "{{ item.0.name }}:{{ item.1.disk.target['@dev'] }}"

    - debug:
        var: vm_mounts
